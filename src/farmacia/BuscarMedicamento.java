/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia;

/**
 *
 * @author Kevin Soto
 */
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class BuscarMedicamento extends javax.swing.JDialog {
ModificarMedicamento med_mod = new ModificarMedicamento();

    String url = "jdbc:mysql://localhost:3306/proyectofarmacia";
    String usuario = "root";
    String contrasena = "kevinsoto";
    Connection conexion = null;
    Statement stmt = null;
    ResultSet result = null; 
    String sqlquery="";
    public String id_borrar;
    /**
     * Creates new form BuscarMedicamento
     */
    public BuscarMedicamento() {
        initComponents();
        conectarBaseDeDatos();
        this.setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CheckNombre = new javax.swing.JCheckBox();
        CheckTipo = new javax.swing.JCheckBox();
        CheckFuncion = new javax.swing.JCheckBox();
        CheckLote = new javax.swing.JCheckBox();
        CheckSerial = new javax.swing.JCheckBox();
        CheckProveedor = new javax.swing.JCheckBox();
        textBuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();
        modificarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar medicamento");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Tipo", "Funcion", "Preescrito", "Fecha vence", "Fecha compra", "Cantidad", "Precio", "Proveedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
        jTable1.getColumnModel().getColumn(6).setResizable(false);
        jTable1.getColumnModel().getColumn(7).setResizable(false);
        jTable1.getColumnModel().getColumn(8).setResizable(false);
        jTable1.getColumnModel().getColumn(9).setResizable(false);

        CheckNombre.setText("Nombre");
        CheckNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckNombreActionPerformed(evt);
            }
        });

        CheckTipo.setText("Tipo");
        CheckTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckTipoActionPerformed(evt);
            }
        });

        CheckFuncion.setText("Funcion");
        CheckFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckFuncionActionPerformed(evt);
            }
        });

        CheckLote.setText("Numero de lote");
        CheckLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckLoteActionPerformed(evt);
            }
        });

        CheckSerial.setText("Serial");
        CheckSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckSerialActionPerformed(evt);
            }
        });

        CheckProveedor.setText("Proveedor");
        CheckProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckProveedorActionPerformed(evt);
            }
        });

        textBuscar.setEnabled(false);
        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Seleccione por que elemento desea hacer la busqueda del medicamento");

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/find.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/salir.png"))); // NOI18N
        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        limpiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/refresh.png"))); // NOI18N
        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        modificarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/modificar.jpg"))); // NOI18N
        modificarButton.setText("Modificar");
        modificarButton.setEnabled(false);
        modificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/eliminar.jpg"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setEnabled(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CheckFuncion)
                                    .addComponent(CheckNombre)
                                    .addComponent(CheckSerial))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CheckProveedor)
                                    .addComponent(CheckTipo)
                                    .addComponent(CheckLote))
                                .addGap(144, 144, 144))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buscarButton)
                        .addGap(18, 18, 18)
                        .addComponent(limpiarButton)
                        .addGap(18, 18, 18)
                        .addComponent(modificarButton)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarButton)
                        .addGap(18, 18, 18)
                        .addComponent(salirButton)))
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckTipo)
                    .addComponent(CheckNombre))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckFuncion)
                    .addComponent(CheckLote))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckProveedor)
                    .addComponent(CheckSerial))
                .addGap(7, 7, 7)
                .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salirButton)
                    .addComponent(buscarButton)
                    .addComponent(limpiarButton)
                    .addComponent(modificarButton)
                    .addComponent(eliminarButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void conectarBaseDeDatos()
    {
        try
        {
        conexion = (Connection) DriverManager.getConnection(url,usuario,contrasena);
        if ( conexion != null )
        System.out.println("Se ha establecido una conexión a la base de datos" + url );
        stmt = (Statement) conexion.createStatement();
        }
        catch(Exception e)
        {
          JOptionPane.showMessageDialog(null,"Error al tratar de conectar la base de datos.\n Verifica tus datos de conexion");
        }
    }
    
    private void CheckNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckNombreActionPerformed
        // TODO add your handling code here:
        if (CheckNombre.isSelected())
        {
            CheckFuncion.setEnabled(false);
            CheckLote.setEnabled(false);
            CheckProveedor.setEnabled(false);
            CheckSerial.setEnabled(false);
            CheckTipo.setEnabled(false);
            textBuscar.setEnabled(true);
            
        }
        else
        {
        CheckFuncion.setEnabled(true);
        CheckLote.setEnabled(true);
        CheckProveedor.setEnabled(true);
        CheckSerial.setEnabled(true);
        CheckTipo.setEnabled(true);
        textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckNombreActionPerformed

    private void CheckTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckTipoActionPerformed
        // TODO add your handling code here:
        if(CheckTipo.isSelected())
        {
            CheckFuncion.setEnabled(false);
            CheckLote.setEnabled(false);
            CheckProveedor.setEnabled(false);
            CheckSerial.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true);
        }
        else
        {
            CheckFuncion.setEnabled(true);
            CheckLote.setEnabled(true);
            CheckProveedor.setEnabled(true);
            CheckSerial.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckTipoActionPerformed

    private void CheckFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckFuncionActionPerformed
        // TODO add your handling code here:
        if(CheckFuncion.isSelected())
        {
            CheckTipo.setEnabled(false);
            CheckLote.setEnabled(false);
            CheckProveedor.setEnabled(false);
            CheckSerial.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true);
        }
        else
        {
            CheckTipo.setEnabled(true);
            CheckLote.setEnabled(true);
            CheckProveedor.setEnabled(true);
            CheckSerial.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckFuncionActionPerformed

    private void CheckLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckLoteActionPerformed
        // TODO add your handling code here:
        if (CheckLote.isSelected())
        {
            CheckTipo.setEnabled(false);
            CheckFuncion.setEnabled(false);
            CheckProveedor.setEnabled(false);
            CheckSerial.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true);
        }
        else
        {
            CheckTipo.setEnabled(true);
            CheckFuncion.setEnabled(true);
            CheckProveedor.setEnabled(true);
            CheckSerial.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckLoteActionPerformed

    private void CheckSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckSerialActionPerformed
        // TODO add your handling code here:
        if(CheckSerial.isSelected())
        {
            CheckTipo.setEnabled(false);
            CheckFuncion.setEnabled(false);
            CheckProveedor.setEnabled(false);
            CheckLote.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true);
        }
        else
        {
            CheckTipo.setEnabled(true);
            CheckFuncion.setEnabled(true);
            CheckProveedor.setEnabled(true);
            CheckLote.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckSerialActionPerformed

    private void CheckProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckProveedorActionPerformed
        // TODO add your handling code here:
        if(CheckProveedor.isSelected())
        {
            CheckTipo.setEnabled(false);
            CheckFuncion.setEnabled(false);
            CheckSerial.setEnabled(false);
            CheckLote.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true);
        }
        else
        {
            CheckTipo.setEnabled(true);
            CheckFuncion.setEnabled(true);
            CheckSerial.setEnabled(true);
            CheckLote.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckProveedorActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        // TODO add your handling code here:
        if(textBuscar.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Escriba lo que desee buscar.", "Campo de busqueda vacio", WIDTH);
        }
        else
        {
        if(CheckNombre.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where Nombre_medicamentos= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento con este nombre. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                        RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
        
        if(CheckTipo.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where Tipo_medicamentos= '"+ textBuscar.getText()+"'");
         
                if (result.next())
                {
                    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento de este tipo. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                        RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
            
        }
        
        if(CheckFuncion.isSelected())
        {
        try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where Funcion_medicamentos= '"+ textBuscar.getText()+"'");
         
                if (result.next())
                {
                   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                   Object[] nuevo = {modelo.getRowCount(), "",""};
                   modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento con esa funcion. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                        RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        
        }
        
        if(CheckLote.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where No_lote= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento con ese numero de lote. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                        RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
        
        if(CheckSerial.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where Serial_medicamentos= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento con ese serial. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                       RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
        
        if(CheckProveedor.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.medicamentos.Id_medicamentos, proyectofarmacia.medicamentos.Proveedor_medicamento, proyectofarmacia.medicamentos.Nombre_medicamentos, proyectofarmacia.medicamentos.Tipo_medicamentos, proyectofarmacia.medicamentos.Funcion_medicamentos, proyectofarmacia.medicamentos.Preescrito, proyectofarmacia.medicamentos.Fecha_vence, proyectofarmacia.medicamentos.Fecha_compra, proyectofarmacia.medicamentos.Cantidad_medicamentos, proyectofarmacia.medicamentos.Precio_medicamentos from medicamentos where Proveedor_medicamento= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, 0, 1);
                    String tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, 0, 2);
                    String funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, 0, 3);
                    String preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, 0, 4);
                    String fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, 0, 5);
                    String fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, 0, 6);
                    int cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, 0, 7);
                    double precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, 0, 8);
                    String proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, 0, 9);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_medicamentos");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_medicamentos");
                    jTable1.setValueAt(nombre, i, 1);
                    tipo = result.getString("Tipo_medicamentos");
                    jTable1.setValueAt(tipo, i, 2);
                    funcion = result.getString("Funcion_medicamentos");
                    jTable1.setValueAt(funcion, i, 3);
                    preescrito = result.getString("Preescrito");
                    jTable1.setValueAt(preescrito, i, 4);
                    fecha_vence = result.getString("Fecha_vence");
                    jTable1.setValueAt(fecha_vence, i, 5);
                    fecha_compra = result.getString("Fecha_compra");
                    jTable1.setValueAt(fecha_compra, i, 6);
                    cantidad = result.getInt("Cantidad_medicamentos");
                    jTable1.setValueAt(cantidad, i, 7);
                     precio = result.getDouble("Precio_medicamentos");
                    jTable1.setValueAt(precio, i, 8);
                    proveedor = result.getString("Proveedor_medicamento");
                    jTable1.setValueAt(proveedor, i, 9);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe medicamento con haya sido proveeido por este proveedor. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                       RegistroMedicamentos med = new RegistroMedicamentos();
                        med.mostrar();
                    }
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
    }
    }//GEN-LAST:event_buscarButtonActionPerformed

    public void limpiarTabla(JTable tabla)
    {
        try
        {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for(int i =0; filas>i; i++)
            {
                modelo.removeRow(0);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error al limpiar la tabla.");
        }
    }
    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
       this.setVisible(false);
    }//GEN-LAST:event_salirButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        // TODO add your handling code here:
        limpiarTabla(jTable1);
        buscarButton.setEnabled(true);
        CheckTipo.setSelected(false);
        CheckLote.setSelected(false);
        CheckProveedor.setSelected(false);
        CheckSerial.setSelected(false);
        CheckNombre.setSelected(false);
        CheckFuncion.setSelected(false);
        CheckFuncion.setEnabled(true);
        CheckLote.setEnabled(true);
        CheckProveedor.setEnabled(true);
        CheckSerial.setEnabled(true);
        CheckNombre.setEnabled(true);
        CheckTipo.setEnabled(true);
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped
        // TODO add your handling code here:
        if(CheckNombre.isSelected())
        {
            if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() !='-' && evt.getKeyChar() != '.' && !Character.isWhitespace(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
            if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Nombre demasiado largo", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckFuncion.isSelected())
        {
            if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
            if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Funcion de medicamento demasiado larga", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckLote.isSelected())
        {
             if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() !='-' && evt.getKeyChar() != '.')        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
              if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Numero de lote demadiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckSerial.isSelected())
        {
            if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
              if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Serial demadiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckProveedor.isSelected())
        {
            if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
              if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Nombre del proveedor demadiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckTipo.isSelected())
        {
            if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Tipo de medicamento demadiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
    }//GEN-LAST:event_textBuscarKeyTyped

    private void modificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarButtonActionPerformed
        // TODO add your handling code here:
        this.setModal(false);
        med_mod.setVisible(true);
    }//GEN-LAST:event_modificarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        try
        {
        int aviso = JOptionPane.showConfirmDialog(this, "Esta seguro que desea eliminar este medicamento?", "Eliminar medicamento", JOptionPane.YES_NO_OPTION);
        if(aviso == JOptionPane.YES_OPTION)
        {
        stmt.executeUpdate("DELETE FROM medicamentos where Id_medicamentos='"+id_borrar+"'");
        JOptionPane.showMessageDialog(this, "Medicamento eliminado exitosamente.", "Medicamento eliminado", WIDTH);
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        modelo.removeRow(row);
        }
        }
        catch(SQLException ex) 
        {
          JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        modificarButton.setEnabled(true);
        eliminarButton.setEnabled(true);
        int row = jTable1.getSelectedRow();
        String id = jTable1.getValueAt(row, 0).toString();
        try
        {
         result = stmt.executeQuery("Select * from medicamentos where Id_medicamentos= '"+ id+"'");
            if(result.next())
            {
                med_mod.textCosto.setText(result.getString("Costo_medicamentos"));
                med_mod.textLote.setText(result.getString("No_lote"));
                med_mod.textDescripcion.setText(result.getString("Descripcion_medicamentos"));
                med_mod.textNombre.setText(result.getString("Nombre_medicamentos"));
                med_mod.textTipo.setText(result.getString("Tipo_medicamentos"));
                med_mod.textFuncion.setText(result.getString("Funcion_medicamentos"));
                med_mod.textPreescrito.setText(result.getString("Preescrito"));
                med_mod.textVence.setText(result.getString("Fecha_vence"));
                med_mod.textCompra.setText(result.getString("Fecha_compra"));
                med_mod.textCantidad.setText(result.getString("Cantidad_medicamentos"));
                med_mod.textPrecio.setText(result.getString("Precio_medicamentos"));
                med_mod.textProveedor.setText(result.getString("Proveedor_medicamento"));
            }
        }
        catch (SQLException ex) 
        {
          JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
        }
        med_mod.idp = id;
        id_borrar = id;
    }//GEN-LAST:event_jTable1MouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarMedicamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              final BuscarMedicamento medicamento = new BuscarMedicamento();
              medicamento.setVisible(true);
              medicamento.setLocationRelativeTo(null);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckFuncion;
    private javax.swing.JCheckBox CheckLote;
    private javax.swing.JCheckBox CheckNombre;
    private javax.swing.JCheckBox CheckProveedor;
    private javax.swing.JCheckBox CheckSerial;
    private javax.swing.JCheckBox CheckTipo;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton limpiarButton;
    private javax.swing.JButton modificarButton;
    private javax.swing.JButton salirButton;
    public javax.swing.JTextField textBuscar;
    // End of variables declaration//GEN-END:variables
}
