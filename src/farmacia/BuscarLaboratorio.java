/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia;

/**
 *
 * @author Kevin Soto
 */
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class BuscarLaboratorio extends javax.swing.JDialog {
ModificarLaboratorio lab_mod = new ModificarLaboratorio();

    String url = "jdbc:mysql://localhost:3306/proyectofarmacia";
    String usuario = "root";
    String contrasena = "kevinsoto";
    Connection conexion = null;
    Statement stmt = null;
    ResultSet result = null; 
    String sqlquery="";
    public String idbb;
    /**
     * Creates new form BuscarLaboratorio
     */
    public BuscarLaboratorio() {
        initComponents();
        conectarBaseDeDatos();
        this.setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        CheckNombre = new javax.swing.JCheckBox();
        CheckTelefono = new javax.swing.JCheckBox();
        CheckSucursal = new javax.swing.JCheckBox();
        textBuscar = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        modificarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar laboratorio");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Telefono", "Sucursal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Seleccione porque elemento desea hacer la busqueda del laboratorio");

        CheckNombre.setText("Nombre");
        CheckNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckNombreActionPerformed(evt);
            }
        });

        CheckTelefono.setText("Telefono");
        CheckTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckTelefonoActionPerformed(evt);
            }
        });

        CheckSucursal.setText("Sucursal");
        CheckSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckSucursalActionPerformed(evt);
            }
        });

        textBuscar.setEnabled(false);
        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/find.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/refresh.png"))); // NOI18N
        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/salir.png"))); // NOI18N
        salirButton.setText("Salir");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        modificarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/modificar.jpg"))); // NOI18N
        modificarButton.setText("Modificar");
        modificarButton.setEnabled(false);
        modificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/eliminar.jpg"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setEnabled(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buscarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpiarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modificarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminarButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(salirButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CheckTelefono)
                            .addComponent(CheckSucursal, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckNombre, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(CheckNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckTelefono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckSucursal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarButton)
                    .addComponent(salirButton)
                    .addComponent(limpiarButton)
                    .addComponent(modificarButton)
                    .addComponent(eliminarButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckNombreActionPerformed
        // TODO add your handling code here:
        if(CheckNombre.isSelected())
        {
            CheckSucursal.setEnabled(false);
            CheckTelefono.setEnabled(false);
            textBuscar.setEnabled(true);    
        }
        else
        {
            CheckSucursal.setEnabled(true);
            CheckTelefono.setEnabled(true);
            textBuscar.setEnabled(false); 
        }
    }//GEN-LAST:event_CheckNombreActionPerformed

    private void CheckTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckTelefonoActionPerformed
        // TODO add your handling code here:
        if(CheckTelefono.isSelected())
        {
            CheckSucursal.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true); 
        }
        else
        {
            CheckSucursal.setEnabled(true);
            CheckNombre.setEnabled(true);
            textBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_CheckTelefonoActionPerformed

    private void CheckSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckSucursalActionPerformed
        // TODO add your handling code here:
        if(CheckSucursal.isSelected())
        {
            CheckTelefono.setEnabled(false);
            CheckNombre.setEnabled(false);
            textBuscar.setEnabled(true); 
        }
        else
        {
           CheckTelefono.setEnabled(true);
           CheckNombre.setEnabled(true);
           textBuscar.setEnabled(false); 
        }
    }//GEN-LAST:event_CheckSucursalActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        // TODO add your handling code here:
        if(textBuscar.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Escriba lo que desee buscar.", "Campo de busqueda vacio", WIDTH);
        }
        else
        {
        if(CheckNombre.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.laboratorios.Id_laboratorios, proyectofarmacia.laboratorios.Nombre_laboratorios, proyectofarmacia.laboratorios.Telefono_laboratorios1, proyectofarmacia.laboratorios.Sucursal from laboratorios where Nombre_laboratorios= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, 0, 1);
                    String telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, 0, 2);
                    String lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, 0, 3);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, i, 1);
                    telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, i, 2);
                    lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, i, 3);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                   int aviso = JOptionPane.showConfirmDialog(this, "No existe laboratorio con ese nombre. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                       RegistroLaboratorios labb = new RegistroLaboratorios();
                       labb.mostrar();
                    }
                    textBuscar.setText("");
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
        
        if(CheckSucursal.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.laboratorios.Id_laboratorios, proyectofarmacia.laboratorios.Nombre_laboratorios, proyectofarmacia.laboratorios.Telefono_laboratorios1, proyectofarmacia.laboratorios.Sucursal from laboratorios where Sucursal= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, 0, 1);
                    String telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, 0, 2);
                    String lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, 0, 3);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, i, 1);
                    telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, i, 2);
                    lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, i, 3);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe laboratorio en esa zona. \n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                      RegistroLaboratorios labb = new RegistroLaboratorios();
                       labb.mostrar();
                    }
                    textBuscar.setText("");
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
        
        if(CheckTelefono.isSelected())
        {
            try
            {
                result = stmt.executeQuery("Select proyectofarmacia.laboratorios.Id_laboratorios, proyectofarmacia.laboratorios.Nombre_laboratorios, proyectofarmacia.laboratorios.Telefono_laboratorios1, proyectofarmacia.laboratorios.Sucursal from laboratorios where Telefono_laboratorios1= '"+ textBuscar.getText()+"'");
                
                if (result.next())
                {
                     DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                     Object[] nuevo = {modelo.getRowCount(), "",""};
                     modelo.addRow(nuevo);
                    int id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, 0, 0);                    
                    String nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, 0, 1);
                    String telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, 0, 2);
                    String lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, 0, 3);
                    
                    for (int i=1; result.next(); i++)
                    { 
                    modelo.addRow(nuevo);
                    id = result.getInt("Id_laboratorios");
                    jTable1.setValueAt(id, i, 0);
                    nombre = result.getString("Nombre_laboratorios");
                    jTable1.setValueAt(nombre, i, 1);
                    telefono = result.getString("Telefono_laboratorios1");
                    jTable1.setValueAt(telefono, i, 2);
                    lab = result.getString("Sucursal");
                    jTable1.setValueAt(lab, i, 3);
                    }
                  textBuscar.setText("");
                  buscarButton.setEnabled(false);
                }
                else
                {
                    int aviso = JOptionPane.showConfirmDialog(this, "No existe laboratorio con ese telefono.\n Desea agregarlo?", "Busqueda sin exito", JOptionPane.YES_NO_OPTION);
                    if(aviso == JOptionPane.YES_OPTION)
                    {
                       RegistroLaboratorios labb = new RegistroLaboratorios();
                       labb.mostrar();
                    }
                    textBuscar.setText("");
                    textBuscar.setText("");
                }
            }
            catch (SQLException ex) 
            {
              JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
            }
        }
    }
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        // TODO add your handling code here:
        limpiarTabla(jTable1);
        buscarButton.setEnabled(true);
        CheckNombre.setSelected(false);
        CheckSucursal.setSelected(false);
        CheckTelefono.setSelected(false);
        CheckNombre.setEnabled(true);
        CheckSucursal.setEnabled(true);
        CheckTelefono.setEnabled(true);
        
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_salirButtonActionPerformed

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped
        // TODO add your handling code here:
        if(CheckNombre.isSelected())
        {
            if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
            if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Nombre de laboratorio demasiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckSucursal.isSelected())
        {
            if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
              if(textBuscar.getText().length() == 45)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Nombre de la sucursal demadiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
        
        if(CheckTelefono.isSelected())
        {
            if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }
            if(textBuscar.getText().length() == 13)
            {
                Toolkit.getDefaultToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(this, "Telefono demasiado largo.", "ADVERTENCIA", WIDTH);
            }
        }
    }//GEN-LAST:event_textBuscarKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        modificarButton.setEnabled(true);
        eliminarButton.setEnabled(true);
        int row = jTable1.getSelectedRow();
        String id = jTable1.getValueAt(row, 0).toString();
        try
        {
         result = stmt.executeQuery("Select * from laboratorios where Id_laboratorios= '"+ id+"'");
            if(result.next())
            {
                lab_mod.textNombre.setText(result.getString("Nombre_laboratorios"));
                lab_mod.textTelefono.setText(result.getString("Telefono_laboratorios1"));
                lab_mod.textSucursal.setText(result.getString("Sucursal"));
            }
        }
        catch (SQLException ex) 
        {
          JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
        }
        lab_mod.idp = id;
        idbb = id;
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void modificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarButtonActionPerformed
        // TODO add your handling code here:
        this.setModal(false);
       lab_mod.setVisible(true);
    }//GEN-LAST:event_modificarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            int aviso = JOptionPane.showConfirmDialog(this, "Esta seguro que desea eliminar este laboratorio?", "Eliminar laboratorio", JOptionPane.YES_NO_OPTION);
            if(aviso == JOptionPane.YES_OPTION)
            {
            stmt.executeUpdate("DELETE FROM laboratorios where Id_laboratorios='"+idbb+"'");
            JOptionPane.showMessageDialog(this, "Laboratorio eliminado exitosamente.", "Laboratorio eliminado", WIDTH);
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            int row = jTable1.getSelectedRow();
            modelo.removeRow(row);
        }    
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(this,"Error al tratar de conectar la base, verifica tus datos de conexion");
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed
    
    public void limpiarTabla(JTable tabla)
    {
        try
        {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for(int i =0; filas>i; i++)
            {
                modelo.removeRow(0);
                
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error al limpiar la tabla.");
        }
    }
    
    public void conectarBaseDeDatos()
        {
            try
            {
            conexion = (Connection) DriverManager.getConnection(url,usuario,contrasena);
            if ( conexion != null )
            System.out.println("Se ha establecido una conexión a la base de datos" + url );
            stmt = (Statement) conexion.createStatement();
            }
            catch(Exception e)
            {
              JOptionPane.showMessageDialog(null,"Error al tratar de conectar la base de datos.\n Verifica tus datos de conexion");
            }
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarLaboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarLaboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarLaboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarLaboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final BuscarLaboratorio laboratorio = new BuscarLaboratorio();
                laboratorio.setVisible(true);
                laboratorio.setLocationRelativeTo(null);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckNombre;
    private javax.swing.JCheckBox CheckSucursal;
    private javax.swing.JCheckBox CheckTelefono;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    private javax.swing.JButton limpiarButton;
    private javax.swing.JButton modificarButton;
    private javax.swing.JButton salirButton;
    private javax.swing.JTextField textBuscar;
    // End of variables declaration//GEN-END:variables
}
