/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia;

import java.awt.Toolkit;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Kevin Soto
 */
public class RegistroProveedores extends JPanel {
    public JDialog dialogo = new JDialog();
    
    public RegistroProveedores() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectofarmacia?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Proveedores p");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        nombreproveedoresLabel = new javax.swing.JLabel();
        telefonoproveedoresLabel = new javax.swing.JLabel();
        laboratorioperteneceLabel = new javax.swing.JLabel();
        celularproveedoresLabel = new javax.swing.JLabel();
        direccionproveedoresLabel = new javax.swing.JLabel();
        nombreproveedoresField = new javax.swing.JTextField();
        telefonoproveedoresField = new javax.swing.JTextField();
        laboratorioperteneceField = new javax.swing.JTextField();
        celularproveedoresField = new javax.swing.JTextField();
        direccionproveedoresField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        laboratoriosButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        masterTable.setEnabled(false);
        masterTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idproveedores}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombreproveedores}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefonoproveedores}"));
        columnBinding.setColumnName("Telefono");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${laboratoriopertenece}"));
        columnBinding.setColumnName("Laboratorio ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(0).setResizable(false);
        masterTable.getColumnModel().getColumn(1).setResizable(false);
        masterTable.getColumnModel().getColumn(2).setResizable(false);
        masterTable.getColumnModel().getColumn(3).setResizable(false);

        nombreproveedoresLabel.setText("Nombre proveedor:");

        telefonoproveedoresLabel.setText("Telefono proveedor:");

        laboratorioperteneceLabel.setText("Laboratorio:");

        celularproveedoresLabel.setText("Celular proveedor:");

        direccionproveedoresLabel.setText("Direccion proveedor:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nombreproveedores}"), nombreproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nombreproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        nombreproveedoresField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.telefonoproveedores}"), telefonoproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), telefonoproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        telefonoproveedoresField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.laboratoriopertenece}"), laboratorioperteneceField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), laboratorioperteneceField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        laboratorioperteneceField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.celularproveedores}"), celularproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), celularproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        celularproveedoresField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.direccionproveedores}"), direccionproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), direccionproveedoresField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        direccionproveedoresField.addKeyListener(formListener);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/save.png"))); // NOI18N
        saveButton.setText("Guardar");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        laboratoriosButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/cruzroja.jpg"))); // NOI18N
        laboratoriosButton.setText("Laboratorios");
        laboratoriosButton.addActionListener(formListener);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/proveedor.jpg"))); // NOI18N
        newButton.setText("Nuevo");
        newButton.addActionListener(formListener);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("*");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/find.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.addActionListener(formListener);

        limpiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/refresh.png"))); // NOI18N
        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreproveedoresLabel)
                            .addComponent(telefonoproveedoresLabel)
                            .addComponent(laboratorioperteneceLabel)
                            .addComponent(celularproveedoresLabel)
                            .addComponent(direccionproveedoresLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(telefonoproveedoresField)
                                            .addComponent(nombreproveedoresField, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(laboratorioperteneceField)
                                        .addGap(4, 4, 4)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(direccionproveedoresField)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                        .addComponent(newButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(laboratoriosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(limpiarButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(saveButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buscarButton))
                                    .addComponent(celularproveedoresField, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(masterScrollPane)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreproveedoresLabel)
                    .addComponent(nombreproveedoresField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoproveedoresLabel)
                    .addComponent(telefonoproveedoresField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laboratorioperteneceLabel)
                    .addComponent(laboratorioperteneceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celularproveedoresLabel)
                    .addComponent(celularproveedoresField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionproveedoresLabel)
                    .addComponent(direccionproveedoresField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(laboratoriosButton)
                    .addComponent(newButton)
                    .addComponent(buscarButton)
                    .addComponent(limpiarButton))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                RegistroProveedores.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == laboratoriosButton) {
                RegistroProveedores.this.laboratoriosButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                RegistroProveedores.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == buscarButton) {
                RegistroProveedores.this.buscarButtonActionPerformed(evt);
            }
            else if (evt.getSource() == limpiarButton) {
                RegistroProveedores.this.limpiarButtonActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == nombreproveedoresField) {
                RegistroProveedores.this.nombreproveedoresFieldKeyTyped(evt);
            }
            else if (evt.getSource() == telefonoproveedoresField) {
                RegistroProveedores.this.telefonoproveedoresFieldKeyTyped(evt);
            }
            else if (evt.getSource() == laboratorioperteneceField) {
                RegistroProveedores.this.laboratorioperteneceFieldKeyTyped(evt);
            }
            else if (evt.getSource() == celularproveedoresField) {
                RegistroProveedores.this.celularproveedoresFieldKeyTyped(evt);
            }
            else if (evt.getSource() == direccionproveedoresField) {
                RegistroProveedores.this.direccionproveedoresFieldKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    

    @SuppressWarnings("unchecked")
    private void laboratoriosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laboratoriosButtonActionPerformed
        BuscarLaboratorio buscar_labb = new BuscarLaboratorio();
        buscar_labb.setVisible(true);
    }//GEN-LAST:event_laboratoriosButtonActionPerformed
        
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        farmacia.Proveedores p = new farmacia.Proveedores();
        entityManager.persist(p);
        list.add(p);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        saveButton.setEnabled(true);
        newButton.setEnabled(false);
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        if(nombreproveedoresField.getText().trim().isEmpty() || telefonoproveedoresField.getText().trim().isEmpty() || laboratorioperteneceField.getText().trim().isEmpty())
        {
          JOptionPane.showMessageDialog(this, "Debe de llenar todos los campos marcados con * como minimo para poder guardar.", "ADVERTENCIA", WIDTH);
        }
        else
        {
            try {
                entityManager.getTransaction().commit();
                entityManager.getTransaction().begin(); 
                JOptionPane.showMessageDialog(this, "Proveedor guardado exitosamente.", "Proveedor guardado", WIDTH);
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                java.util.Collection data = query.getResultList();
                for (Object entity : data) {
                entityManager.refresh(entity);
                }
                list.clear();
                list.addAll(data);
                newButton.setEnabled(true);
                saveButton.setEnabled(false);
            } catch (RollbackException rex) {
                rex.printStackTrace();
                entityManager.getTransaction().begin();
                List<farmacia.Proveedores> merged = new ArrayList<farmacia.Proveedores>(list.size());
                for (farmacia.Proveedores p : list) {
                    merged.add(entityManager.merge(p));
                }
                list.clear();
                list.addAll(merged);
                newButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void nombreproveedoresFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreproveedoresFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
          if(nombreproveedoresField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Nombre del proveedor demadiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_nombreproveedoresFieldKeyTyped

    private void telefonoproveedoresFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoproveedoresFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(telefonoproveedoresField.getText().length() == 13)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Telefono demasiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_telefonoproveedoresFieldKeyTyped

    private void celularproveedoresFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularproveedoresFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(celularproveedoresField.getText().length() == 13)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Celular demasiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_celularproveedoresFieldKeyTyped

    private void laboratorioperteneceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_laboratorioperteneceFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()) && evt.getKeyChar() != '.')        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(laboratorioperteneceField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Nombre de laboratorio demasiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_laboratorioperteneceFieldKeyTyped

    private void direccionproveedoresFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_direccionproveedoresFieldKeyTyped
        // TODO add your handling code here:
         if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() !='#' && evt.getKeyChar() !='.' && evt.getKeyChar() !='-' && evt.getKeyChar() !=',' && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(laboratorioperteneceField.getText().length() == 100)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Direccion demasiado larga.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_direccionproveedoresFieldKeyTyped

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        // TODO add your handling code here:
        BuscarProveedor buscar_proveedor = new BuscarProveedor();
        buscar_proveedor.setVisible(true);
        dialogo.setModal(false);
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        newButton.setEnabled(true);
        saveButton.setEnabled(false);
    }//GEN-LAST:event_limpiarButtonActionPerformed

    public void mostrar()
    {
      
      dialogo.setContentPane(new RegistroProveedores());
      dialogo.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
      dialogo.setTitle("Registro de proveedores");
      dialogo.setResizable(false);
      dialogo.pack();
      dialogo.setModal(true);
      dialogo.setLocationRelativeTo(null);
      dialogo.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField celularproveedoresField;
    private javax.swing.JLabel celularproveedoresLabel;
    private javax.swing.JTextField direccionproveedoresField;
    private javax.swing.JLabel direccionproveedoresLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField laboratorioperteneceField;
    private javax.swing.JLabel laboratorioperteneceLabel;
    private javax.swing.JButton laboratoriosButton;
    private javax.swing.JButton limpiarButton;
    private java.util.List<farmacia.Proveedores> list;
    private javax.swing.JScrollPane masterScrollPane;
    javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField nombreproveedoresField;
    private javax.swing.JLabel nombreproveedoresLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField telefonoproveedoresField;
    private javax.swing.JLabel telefonoproveedoresLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }
}
