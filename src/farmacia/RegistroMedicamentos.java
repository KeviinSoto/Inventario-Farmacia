/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia;

import java.awt.Toolkit;
import java.beans.Beans;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Kevin Soto
 */
public class RegistroMedicamentos extends JPanel {
JDialog dialogo = new JDialog();

    public RegistroMedicamentos() {
        initComponents();
        if (!Beans.isDesignTime()) 
        {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("proyectofarmacia?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Medicamentos m");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        nombremedicamentosLabel = new javax.swing.JLabel();
        descripcionmedicamentosLabel = new javax.swing.JLabel();
        tipomedicamentosLabel = new javax.swing.JLabel();
        funcionmedicamentosLabel = new javax.swing.JLabel();
        preescritoLabel = new javax.swing.JLabel();
        fechavenceLabel = new javax.swing.JLabel();
        fechacompraLabel = new javax.swing.JLabel();
        cantidadmedicamentosLabel = new javax.swing.JLabel();
        costomedicamentosLabel = new javax.swing.JLabel();
        preciomedicamentosLabel = new javax.swing.JLabel();
        noloteLabel = new javax.swing.JLabel();
        serialmedicamentosLabel = new javax.swing.JLabel();
        proveedormedicamentoLabel = new javax.swing.JLabel();
        nombremedicamentosField = new javax.swing.JTextField();
        descripcionmedicamentosField = new javax.swing.JTextField();
        tipomedicamentosField = new javax.swing.JTextField();
        funcionmedicamentosField = new javax.swing.JTextField();
        preescritoField = new javax.swing.JTextField();
        fechavenceField = new javax.swing.JTextField();
        fechacompraField = new javax.swing.JTextField();
        cantidadmedicamentosField = new javax.swing.JTextField();
        costomedicamentosField = new javax.swing.JTextField();
        preciomedicamentosField = new javax.swing.JTextField();
        noloteField = new javax.swing.JTextField();
        serialmedicamentosField = new javax.swing.JTextField();
        proveedormedicamentoField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        proveedoresButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        masterTable.setEnabled(false);
        masterTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idmedicamentos}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombremedicamentos}"));
        columnBinding.setColumnName("Medicamento");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipomedicamentos}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcionmedicamentos}"));
        columnBinding.setColumnName("Funcion");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${preescrito}"));
        columnBinding.setColumnName("Preescrito");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechavence}"));
        columnBinding.setColumnName("Fecha vence");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechacompra}"));
        columnBinding.setColumnName("Fecha compra");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantidadmedicamentos}"));
        columnBinding.setColumnName("Cantidad");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${preciomedicamentos}"));
        columnBinding.setColumnName("Precio");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${proveedormedicamento}"));
        columnBinding.setColumnName("Proveedor");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(0).setResizable(false);
        masterTable.getColumnModel().getColumn(1).setResizable(false);
        masterTable.getColumnModel().getColumn(2).setResizable(false);
        masterTable.getColumnModel().getColumn(3).setResizable(false);
        masterTable.getColumnModel().getColumn(4).setResizable(false);
        masterTable.getColumnModel().getColumn(5).setResizable(false);
        masterTable.getColumnModel().getColumn(6).setResizable(false);
        masterTable.getColumnModel().getColumn(7).setResizable(false);
        masterTable.getColumnModel().getColumn(8).setResizable(false);
        masterTable.getColumnModel().getColumn(9).setResizable(false);

        nombremedicamentosLabel.setText("Nombre medicamento:");

        descripcionmedicamentosLabel.setText("Descripcion medicamento:");

        tipomedicamentosLabel.setText("Tipo medicamentos:");

        funcionmedicamentosLabel.setText("Funcion medicamento:");

        preescritoLabel.setText("Preescrito:");

        fechavenceLabel.setText("Fecha de vencimiento:");

        fechacompraLabel.setText("Fecha de compra:");

        cantidadmedicamentosLabel.setText("Cantidad de medicamento:");

        costomedicamentosLabel.setText("Costo del medicamento:");

        preciomedicamentosLabel.setText("Precio del medicamentos:");

        noloteLabel.setText("Numero de lote:");

        serialmedicamentosLabel.setText("Serial del medicamento:");

        proveedormedicamentoLabel.setText("Proveedor del medicamento:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nombremedicamentos}"), nombremedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nombremedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        nombremedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.descripcionmedicamentos}"), descripcionmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), descripcionmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        descripcionmedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tipomedicamentos}"), tipomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), tipomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.funcionmedicamentos}"), funcionmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), funcionmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        funcionmedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.preescrito}"), preescritoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), preescritoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        preescritoField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechavence}"), fechavenceField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechavenceField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fechavenceField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechacompra}"), fechacompraField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechacompraField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cantidadmedicamentos}"), cantidadmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), cantidadmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        cantidadmedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.costomedicamentos}"), costomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), costomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        costomedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.preciomedicamentos}"), preciomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), preciomedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        preciomedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nolote}"), noloteField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), noloteField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        noloteField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.serialmedicamentos}"), serialmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), serialmedicamentosField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        serialmedicamentosField.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.proveedormedicamento}"), proveedormedicamentoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), proveedormedicamentoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        proveedormedicamentoField.addKeyListener(formListener);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/save.png"))); // NOI18N
        saveButton.setText("Guardar");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        proveedoresButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/buscar_proveedor.jpg"))); // NOI18N
        proveedoresButton.setText("Proveedores");
        proveedoresButton.addActionListener(formListener);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/medicamento.png"))); // NOI18N
        newButton.setText("Nuevo");
        newButton.addActionListener(formListener);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("*");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("*");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("*");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/find.png"))); // NOI18N
        searchButton.setText("Buscar");
        searchButton.addActionListener(formListener);

        limpiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmacia/refresh.png"))); // NOI18N
        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombremedicamentosLabel)
                                    .addComponent(descripcionmedicamentosLabel)
                                    .addComponent(tipomedicamentosLabel)
                                    .addComponent(funcionmedicamentosLabel)
                                    .addComponent(preescritoLabel)
                                    .addComponent(fechavenceLabel)
                                    .addComponent(fechacompraLabel)
                                    .addComponent(cantidadmedicamentosLabel)
                                    .addComponent(costomedicamentosLabel)
                                    .addComponent(preciomedicamentosLabel)
                                    .addComponent(noloteLabel)
                                    .addComponent(serialmedicamentosLabel)
                                    .addComponent(proveedormedicamentoLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombremedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(descripcionmedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(tipomedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(funcionmedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(preescritoField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(fechavenceField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(fechacompraField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(cantidadmedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(costomedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(preciomedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(noloteField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(serialmedicamentosField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                                    .addComponent(proveedormedicamentoField, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)))
                            .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(proveedoresButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)
                        .addGap(22, 22, 22))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {newButton, proveedoresButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombremedicamentosLabel)
                    .addComponent(nombremedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcionmedicamentosLabel)
                    .addComponent(descripcionmedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipomedicamentosLabel)
                    .addComponent(tipomedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(funcionmedicamentosLabel)
                    .addComponent(funcionmedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preescritoLabel)
                    .addComponent(preescritoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechavenceLabel)
                    .addComponent(fechavenceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechacompraLabel)
                    .addComponent(fechacompraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidadmedicamentosLabel)
                    .addComponent(cantidadmedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costomedicamentosLabel)
                    .addComponent(costomedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preciomedicamentosLabel)
                    .addComponent(preciomedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noloteLabel)
                    .addComponent(noloteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialmedicamentosLabel)
                    .addComponent(serialmedicamentosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proveedormedicamentoLabel)
                    .addComponent(proveedormedicamentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(proveedoresButton)
                    .addComponent(newButton)
                    .addComponent(searchButton)
                    .addComponent(limpiarButton))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                RegistroMedicamentos.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == proveedoresButton) {
                RegistroMedicamentos.this.proveedoresButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                RegistroMedicamentos.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == searchButton) {
                RegistroMedicamentos.this.searchButtonActionPerformed(evt);
            }
            else if (evt.getSource() == limpiarButton) {
                RegistroMedicamentos.this.limpiarButtonActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == nombremedicamentosField) {
                RegistroMedicamentos.this.nombremedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == descripcionmedicamentosField) {
                RegistroMedicamentos.this.descripcionmedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == funcionmedicamentosField) {
                RegistroMedicamentos.this.funcionmedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == preescritoField) {
                RegistroMedicamentos.this.preescritoFieldKeyTyped(evt);
            }
            else if (evt.getSource() == fechavenceField) {
                RegistroMedicamentos.this.fechavenceFieldKeyTyped(evt);
            }
            else if (evt.getSource() == cantidadmedicamentosField) {
                RegistroMedicamentos.this.cantidadmedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == costomedicamentosField) {
                RegistroMedicamentos.this.costomedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == preciomedicamentosField) {
                RegistroMedicamentos.this.preciomedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == noloteField) {
                RegistroMedicamentos.this.noloteFieldKeyTyped(evt);
            }
            else if (evt.getSource() == serialmedicamentosField) {
                RegistroMedicamentos.this.serialmedicamentosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == proveedormedicamentoField) {
                RegistroMedicamentos.this.proveedormedicamentoFieldKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    

    @SuppressWarnings("unchecked")
    private void proveedoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proveedoresButtonActionPerformed
        BuscarProveedor buscar_provv = new BuscarProveedor();
        buscar_provv.setVisible(true);
    }//GEN-LAST:event_proveedoresButtonActionPerformed
        
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        farmacia.Medicamentos m = new farmacia.Medicamentos();
        entityManager.persist(m);
        list.add(m);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        Date now = new Date(System.currentTimeMillis());
        SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
        fechacompraField.setText(date.format(now));
        fechacompraField.setEnabled(false);
        saveButton.setEnabled(true);
        newButton.setEnabled(false);
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if(nombremedicamentosField.getText().trim().isEmpty() || tipomedicamentosField.getText().trim().isEmpty() || funcionmedicamentosField.getText().trim().isEmpty() || preescritoField.getText().trim().isEmpty() || fechavenceField.getText().trim().isEmpty() || cantidadmedicamentosField.getText().trim().isEmpty() || costomedicamentosField.getText().trim().isEmpty() || preciomedicamentosField.getText().trim().isEmpty() || noloteField.getText().trim().isEmpty() || serialmedicamentosField.getText().trim().isEmpty() || proveedormedicamentoField.getText().trim().isEmpty())
        {
           JOptionPane.showMessageDialog(this, "Debe de llenar todos los campos marcados con * como minimo para poder guardar.", "ADVERTENCIA", WIDTH);
        }
        else
        {
             try 
             {
                entityManager.getTransaction().commit();
                entityManager.getTransaction().begin();
                JOptionPane.showMessageDialog(this, "Medicamento guadado exitosamente.", "Medicamento guardado", WIDTH);
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                java.util.Collection data = query.getResultList();
                for (Object entity : data) {
                entityManager.refresh(entity);
                }
                list.clear();
                list.addAll(data);
                newButton.setEnabled(true);
                saveButton.setEnabled(false);
             } 
             catch (RollbackException rex) 
             {
                rex.printStackTrace();
                entityManager.getTransaction().begin();
                List<farmacia.Medicamentos> merged = new ArrayList<farmacia.Medicamentos>(list.size());
                for (farmacia.Medicamentos m : list) {
                    merged.add(entityManager.merge(m));
                }
                list.clear();
                list.addAll(merged);
                newButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void nombremedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombremedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() !='-' && evt.getKeyChar() != '.' && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(nombremedicamentosField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Nombre demasiado largo", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_nombremedicamentosFieldKeyTyped

    private void descripcionmedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionmedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(descripcionmedicamentosField.getText().length() == 100)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Descripcion demasiado larga", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_descripcionmedicamentosFieldKeyTyped

    private void funcionmedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_funcionmedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(funcionmedicamentosField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Funcion de medicamento demasiado larga", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_funcionmedicamentosFieldKeyTyped

    private void preescritoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_preescritoFieldKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() !='S' && evt.getKeyChar() !='I' && evt.getKeyChar() !='N' && evt.getKeyChar() !='O' && evt.getKeyChar() !='s' && evt.getKeyChar() !='i' && evt.getKeyChar() !='n' && evt.getKeyChar() !='o' && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(preescritoField.getText().length() == 2)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Preescrito solo acepta Si o No", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_preescritoFieldKeyTyped

    private void fechavenceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechavenceFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() !='-' && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(fechavenceField.getText().length() == 10)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Fecha de vencimiento demasiado larga. \n El formato correcto es (YYYY-MM-DD)", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_fechavenceFieldKeyTyped

    private void cantidadmedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadmedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(cantidadmedicamentosField.getText().length() == 10)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Cantidad de medicamento demadiado grande.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_cantidadmedicamentosFieldKeyTyped

    private void costomedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costomedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() !='.' && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(costomedicamentosField.getText().length() == 5)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Costo de medicamento demadiado grande.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_costomedicamentosFieldKeyTyped

    private void preciomedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_preciomedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() !='.' && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
        if(preciomedicamentosField.getText().length() == 5)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Precio de medicamento demadiado grande.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_preciomedicamentosFieldKeyTyped

    private void noloteFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noloteFieldKeyTyped
        // TODO add your handling code here:
         if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() !='-' && evt.getKeyChar() != '.')        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
          if(noloteField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Numero de lote demadiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_noloteFieldKeyTyped

    private void serialmedicamentosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serialmedicamentosFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetterOrDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
          if(serialmedicamentosField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Serial demadiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_serialmedicamentosFieldKeyTyped

    private void proveedormedicamentoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proveedormedicamentoFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && !Character.isWhitespace(evt.getKeyChar()))        
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
          if(proveedormedicamentoField.getText().length() == 45)
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Nombre del proveedor demadiado largo.", "ADVERTENCIA", WIDTH);
        }
    }//GEN-LAST:event_proveedormedicamentoFieldKeyTyped

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        BuscarMedicamento buscar_medicamento = new BuscarMedicamento();
        buscar_medicamento.setVisible(true);
        dialogo.setModal(false);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        // TODO add your handling code here:
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        newButton.setEnabled(true);
        saveButton.setEnabled(false);
    }//GEN-LAST:event_limpiarButtonActionPerformed

     public void mostrar() 
          {
              dialogo.setContentPane(new RegistroMedicamentos());
              dialogo.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
              dialogo.setTitle("Registro de medicamentos");
              dialogo.setResizable(false);
              dialogo.pack();
              dialogo.setModal(true);
              dialogo.setLocationRelativeTo(null);
              dialogo.setVisible(true);
          }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cantidadmedicamentosField;
    private javax.swing.JLabel cantidadmedicamentosLabel;
    private javax.swing.JTextField costomedicamentosField;
    private javax.swing.JLabel costomedicamentosLabel;
    private javax.swing.JTextField descripcionmedicamentosField;
    private javax.swing.JLabel descripcionmedicamentosLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField fechacompraField;
    private javax.swing.JLabel fechacompraLabel;
    private javax.swing.JTextField fechavenceField;
    private javax.swing.JLabel fechavenceLabel;
    private javax.swing.JTextField funcionmedicamentosField;
    private javax.swing.JLabel funcionmedicamentosLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpiarButton;
    private java.util.List<farmacia.Medicamentos> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField noloteField;
    private javax.swing.JLabel noloteLabel;
    private javax.swing.JTextField nombremedicamentosField;
    private javax.swing.JLabel nombremedicamentosLabel;
    private javax.swing.JTextField preciomedicamentosField;
    private javax.swing.JLabel preciomedicamentosLabel;
    private javax.swing.JTextField preescritoField;
    private javax.swing.JLabel preescritoLabel;
    private javax.swing.JButton proveedoresButton;
    private javax.swing.JTextField proveedormedicamentoField;
    private javax.swing.JLabel proveedormedicamentoLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField serialmedicamentosField;
    private javax.swing.JLabel serialmedicamentosLabel;
    private javax.swing.JTextField tipomedicamentosField;
    private javax.swing.JLabel tipomedicamentosLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       
        /* Create and display the form */
    }
}
